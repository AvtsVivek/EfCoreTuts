// <auto-generated />
using System;
using Ef000301_RecordsConsole;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ef000301_RecordsConsole.Migrations
{
    [DbContext(typeof(BakeryDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ef000301_RecordsConsole.Pie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pies");
                });

            modelBuilder.Entity("Ef000301_RecordsConsole.Pie", b =>
                {
                    b.OwnsOne("Ef000301_RecordsConsole.ServingSize", "ServingSize", b1 =>
                        {
                            b1.Property<Guid>("PieId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("maxium")
                                .HasColumnType("int");

                            b1.Property<int>("minium")
                                .HasColumnType("int");

                            b1.HasKey("PieId");

                            b1.ToTable("Pies");

                            b1.WithOwner()
                                .HasForeignKey("PieId");
                        });

                    b.Navigation("ServingSize")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
